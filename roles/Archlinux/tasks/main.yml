---
# tasks file for Archlinux
#
#
- name: Remove conflicting packages
  pacman:
    pkg: '{{ item }}'
    state: absent
    force: true
  become: true
  with_items:
    - iptables
- name: Install GUI packages
  pacman:
    pkg: '{{ item }}'
    state: present
  become: true
  ignore_errors: true
  with_items: '{{ pacman_packages }}'

- name: Create user for installing AUR packages
  user:
    name: aur_builder
    system: true
  become: true

- name: Add AUR user to sudoers
  lineinfile:
     path: /etc/sudoers.d/aur_builder-allow-to-sudo-pacman
     state: present
     line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
     validate: /usr/sbin/visudo -cf %s
     create: yes
  become: true

- name: Install yay AUR helper
  kewlfft.aur.aur:
    name: yay
    state: present
  become: true
  become_user: aur_builder

- name: Install AUR packages
  kewlfft.aur.aur:
    name: "{{ item }}"
    state: present
  with_items: '{{ aur_packages }}'
  become: true
  become_user: aur_builder

- name: Enable services
  systemd:
    name: "{{ item }}"
    enabled: true
  become: true
  with_items:
    - NetworkManager.service
    - lightdm.service
    - docker.service
    - libvirtd.service

- name: Create main user
  user:
    name: "{{ arch_user }}"
    state: present
    shell: /usr/bin/zsh
    groups: wheel, audio, video, optical, storage, docker, libvirt
    generate_ssh_key: true

- name: Add user to sudoers
  lineinfile:
     path: /etc/sudoers.d/desktop_user
     state: present
     line: "{{ arch_user }} ALL=(ALL) NOPASSWD: ALL"
     validate: /usr/sbin/visudo -cf %s
     create: yes
  become: true

- name: Create CLI environment for new user
  include_role:
    name: cli
  vars:
    user: "{{ arch_user }}"

- name: Configure lightdm greeter
  lineinfile:
    path: "{{ item.file }}"
    search_string: "{{ item.param }}"
    line: "{{ item.param }}={{ item.value }}"
  become: true
  with_items:
    - param: greeter-session
      value: lightdm-webkit2-greeter
      file: /etc/lightdm/lightdm.conf
    - param: user-session
      value: awesome
      file: /etc/lightdm/lightdm.conf
    - param: webkit_theme
      value: reactive
      file: /etc/lightdm/lightdm-webkit2-greeter.conf


- name: Get root partition
  set_fact:
    root_drive: "{{ ansible_mounts|json_query('[?mount == `/`]') | first }}"

- name: Get PARTUUID for root partition
  shell: blkid {{ root_drive.device }} -s PARTUUID -o value
  register: partuuid
  changed_when: false

- name: Create kernel cmdline template
  set_fact:
    base_cmdline: >
      root=PARTUUID={{ partuuid.stdout }}
      rw
      rootflags={{ root_drive.options|regex_search('subvolid=[0-9]{3,4}') }}

- name: Set kernel cmdline
  copy:
    dest: /etc/kernel/cmdline
    content: "{{ base_cmdline }} quiet bgrt_disable"
  become: true
  notify: build boot images

- name: Set fallback kernel cmdline
  copy:
    dest: /etc/kernel/cmdline_fallback
    content: "{{ base_cmdline }} systemd.unit=multi-user.target"
  become: true
  notify: build boot images

- name: Write UKI settings
  lineinfile:
    path: /etc/mkinitcpio.d/linux.preset
    search_string: "{{ item.param }}"
    line: "{{ item.param }}={{ item.value }}"
    insertafter: "{{ item.after }}"
    backup: true
  become: true
  with_items:
    - param: PRESETS
      value: "('default' 'terminal' 'fallback')"
      after: "^# mkinitcpio preset file"
    - param: default_uki
      value: '"/boot/efi/EFI/arch/initramfs-linux.efi"'
      after: default_image
    - param: default_options
      value: '"--splash /usr/share/systemd/bootctl/splash-arch.bmp"'
      after: default_uki
    - param: terminal_image
      value: '"/boot/initramfs-linux-terminal.img"'
      after: default_options
    - param: terminal_uki
      value: '"/boot/efi/EFI/arch/initramfs-linux-terminal.efi"'
      after: terminal_image
    - param: terminal_options
      value: '"--cmdline /etc/kernel/cmdline_fallback"'
      after: terminal_uki
    - param: fallback_uki
      value: '"/boot/efi/EFI/arch/initramfs-linux-fallback.efi"'
      after: fallback_image
    - param: fallback_options
      value: '"-S autodetect --cmdline /etc/kernel/cmdline_fallback"'
      after: fallback_uki
  notify: build boot images

- name: Find microcode files
  find:
    path: /boot
    pattern: "*-ucode.img"
  become: true
  register: ucode

- name: Add ucode to UKI image spec
  lineinfile:
    path: /etc/mkinitcpio.d/linux.preset
    search_string: ALL_microcode
    line: "ALL_microcode=({{ ucode.files|map(attribute='path')|map('quote')|join(' ') }})"
    insertafter: ALL_kver
  become: true
  notify: build boot images

- name: Create directory for boot images
  file:
    path: /boot/efi/EFI/arch/
    state: directory
  become: true

- name: Install refind
  command:
    cmd: refind-install
    creates: /boot/refind_linux.conf
  become: true

- name: Add manual boot stanzas to refind.conf
  blockinfile:
    path: /boot/efi/EFI/refind/refind.conf
    block: |
      menuentry "Arch Linux" {
          loader   EFI/arch/initramfs-linux.efi
          submenuentry "Boot to terminal" {
              loader EFI/arch/initramfs-linux-terminal.efi
          }
          submenuentry "Boot using fallback initramfs" {
              loader EFI/arch/initramfs-linux-fallback.efi
          }
      }

- name: Copy refind theme files
  copy:
    src: "{{ item.src }}"
    dest: /boot/efi/EFI/refind/{{ item.dest }}
  with_items:
    - src: refind-theme.conf
      dest: refind-theme.conf
    - src: refind-theme/fonts/
      dest: themes/refind-theme-regular/fonts/
    - src: refind-theme/icons/
      dest: themes/refind-theme-regular/icons/
  become: true

- name: Configure refind
  lineinfile:
    path: /boot/efi/EFI/refind/refind.conf
    search_string: "{{ item.param }}"
    line: "{{ item.param }} {{ item.value }}"
  become: true
  with_items:
    - param: timeout
      value: "5"
    - param: scanfor
      value: manual,external,optical
    - param: include
      value: theme.conf

- name: Configure touchpad & keyboard settings
  copy:
    src: "{{ item }}"
    dest: /etc/X11/xorg.conf.d/{{ item }}
  become: true
  with_items:
    - 30-touchpad.conf
    - 90-custom-kbd.conf
